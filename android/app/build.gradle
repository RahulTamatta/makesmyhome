plugins {
    id "com.android.application"
    id "org.jetbrains.kotlin.android"
    id "dev.flutter.flutter-gradle-plugin"
    id "com.google.gms.google-services"
    id "com.google.firebase.crashlytics"
}

def localProperties = new Properties()
def localPropertiesFile = rootProject.file('local.properties')
if (localPropertiesFile.exists()) {
    localPropertiesFile.withReader('UTF-8') { reader ->
        localProperties.load(reader)
    }
}

def flutterVersionCode = localProperties.getProperty('flutter.versionCode')
if (flutterVersionCode == null) {
    flutterVersionCode = '1'
}

def flutterVersionName = localProperties.getProperty('flutter.versionName')
if (flutterVersionName == null) {
    flutterVersionName = '1.0'
}


def keystoreProperties = new Properties()
def keystorePropertiesFile = rootProject.file('key.properties')
if (keystorePropertiesFile.exists()) {
    keystoreProperties.load(new FileInputStream(keystorePropertiesFile))
}

android {
    namespace "com.sixamtech.demandium.user"
    compileSdkVersion 36
//    compileSdkVersion flutter.compileSdkVersion
   
    ndkVersion flutter.ndkVersion
    
    packagingOptions {
        // Suppress metadata version mismatch warning
        resources {
            excludes += ['META-INF/*.kotlin_module']
        }
    }

    compileOptions {
        coreLibraryDesugaringEnabled true
        sourceCompatibility JavaVersion.VERSION_17
        targetCompatibility JavaVersion.VERSION_17
    }
    repositories {
        google()
        mavenCentral()
//        maven {
//            url 'https://dl.bintray.com/android/android-tools'
//        }
    }
    kotlinOptions {
        jvmTarget = '17'
    }

    sourceSets {
        main.java.srcDirs += 'src/main/kotlin'
    }
    defaultConfig {
        applicationId "com.sixamtech.demandium.user"
        minSdkVersion flutter.minSdkVersion
        targetSdkVersion 36
        versionCode flutterVersionCode.toInteger()
        versionName flutterVersionName
        multiDexEnabled true
    }

    // Configure signing only if key.properties exists
    if (keystorePropertiesFile.exists()) {
    signingConfigs {
    release {
        storeFile file(keystoreProperties['storeFile'])
        storePassword keystoreProperties['storePassword']
        keyAlias keystoreProperties['keyAlias']
        keyPassword keystoreProperties['keyPassword']
    }
}
    }

    buildTypes {
        release {
            if (keystorePropertiesFile.exists()) {
                signingConfig signingConfigs.release
            } else {
                signingConfig signingConfigs.debug
            }

            // Enable code shrinking, obfuscation, and optimization for release builds
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'

            firebaseCrashlytics {
                mappingFileUploadEnabled false
            }
        }
        
        debug {
            // Disable minification for debug builds to avoid R8 issues
            minifyEnabled false
            // proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
}

flutter {
    source '../..'
}

dependencies {
    coreLibraryDesugaring 'com.android.tools:desugar_jdk_libs:2.1.4'
    implementation "com.google.firebase:firebase-messaging:23.4.1"
    implementation 'com.facebook.android:facebook-android-sdk:latest.release'
    // Removed Play Core dependency to avoid duplicate classes conflict
    // Removed explicit kotlinx-metadata-jvm to avoid metadata version conflicts with Kotlin 2.x
}

configurations.all {
    resolutionStrategy.eachDependency { details ->
        if (details.requested.group == 'org.bouncycastle' && details.requested.name == 'bcprov-jdk18on') {
            details.useVersion '1.77'  // Force compatible version
        }
    }
}
